import type { Linter } from 'eslint';

const errors: Linter.RulesRecord = {
  'for-direction': 2,
  'getter-return': 2,
  'no-async-promise-executor': 2,
  'no-await-in-loop': 2,
  'no-compare-neg-zero': 2,
  'no-cond-assign': 2,
  'no-console': 1,
  'no-constant-condition': [2, { checkLoops: false }],
  'no-control-regex': 2,
  'no-debugger': 1,
  'no-dupe-args': 2,
  'no-dupe-else-if': 2,
  'no-dupe-keys': 2,
  'no-duplicate-case': 2,
  'no-empty': 2,
  'no-empty-character-class': 2,
  'no-ex-assign': 2,
  'no-extra-boolean-cast': 1,
  'no-func-assign': 2,
  'no-import-assign': 2,
  'no-invalid-regexp': 2,
  'no-irregular-whitespace': 2,
  'no-loss-of-precision': 2,
  'no-misleading-character-class': 2,
  'no-obj-calls': 2,
  'no-promise-executor-return': 2,
  'no-prototype-builtins': 2,
  'no-regex-spaces': 2,
  'no-sparse-arrays': 1,
  'no-template-curly-in-string': 1,
  'no-unexpected-multiline': 2,
  'no-unreachable': 2,
  'no-unreachable-loop': 2,
  'no-unsafe-finally': 2,
  'no-unsafe-negation': 2,
  'no-unsafe-optional-chaining': 2,
  'no-useless-backreference': 2,
  'require-atomic-updates': 2,
  'use-isnan': 2,
  'valid-typeof': 2,
};

export default errors;
